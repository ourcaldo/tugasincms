As a developer expert, help me to made modern and profesional-llok backend CMS (Content Management System) using:
1. Neon as a database
2. CLerk for the authentication
3. Appwrite for the bucket storage
4. Tiptap for the rich text editor
The credentials of the database plase place it on the .env.example (cp it as a .env).

The content management system itself is quite simple, just have the basic feature to made the blog post. 

Credentials:
Database URL=psql 'postgresql://neondb_owner:npg_1GymgdFnuqL7@ep-cold-union-a1owc6tq-pooler.ap-southeast-1.aws.neon.tech/tugasindb?sslmode=require&channel_binding=require'
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=pk_test_c3VyZS1zb2xlLTU3LmNsZXJrLmFjY291bnRzLmRldiQ
CLERK_SECRET_KEY=sk_test_roAlMtIgTkBnuB6lC37d0ZToHkYu1QDitnElTyAgt2
NEXT_PUBLIC_APPWRITE_PROJECT_ID = "68dbeafc001332c9af2b"
NEXT_PUBLIC_APPWRITE_PROJECT_NAME = "tugasin"
NEXT_PUBLIC_APPWRITE_ENDPOINT = "https://syd.cloud.appwrite.io/v1"
NEXT_PUBLIC_BUCKET_NAME= "tugasin-bucket"
NEXT_PUBLIC_BUCKET_ID= "68dbeb68001d67f6837d"

The CMS feature that I need is:
1. Settings page where I can set up/change my profile and generate a Token API
2. CMS where I can see, edit and made new post

The Post feature itself mostly like WordPress Editor, which have:
1. Title
2. Content (using tiptap)
3. Category (can made new one and multiple select)
4. Tag (can made new one and multiple select)
5. Featured Images which I can upload or use external images by put the images url
6. Excerpt
7. Slug
8. Publish Date (if the publish date is future then it's set as scheduled)

Then, please also made SEO Features which is quite simple, like:
1. SEO Title (default is blog title)
2. Meta Description (default is excerpt)
3. Focus Keyword
4. Slug (default is blog slug)

Then, I also want you to made API where's I can:
1. Get all the post (JSON response that give all the post)
2. Publish a post (publish a post using POST request)

To made this project CMS, please make sure to:
1. The project must be standarized, production ready, good documented and refactored
2. As I said good refactored, please don't made the the files that handle all the things
3. Make it standarized
4. Have modern and profesional looks

This project is no need a landing page or anything, because this is just a CMS.